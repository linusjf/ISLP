#!/usr/bin/env bash
# Script name and description
# genpdf - Generate PDF files from Jupyter notebooks

# Script usage and dependencies
# This script converts notebook files to PDF format. It can process
# all notebooks in the specified project directory. The specified directory must be
# a Quarto project i.e., it must have a _quarto.yml file that specifies how to
# generate the pdf files.

# Usage:
#   genpdf <dir> - Convert all found ipynb files in directory to PDF

# Dependencies:
# quarto
# tee
# find

# Uncomment this for debug mode
# set -x

# Function to check if required dependencies are installed
require() {
  for cmd in "$@"; do
    if ! command -v "$cmd" &> /dev/null; then
      echo "Error: $cmd is not installed"
      exit 127
    fi
  done
}

# Function to print usage
usage() {
  cat << EOF
usage: ${0} <dir1> ... <dirn>
dir<1-n> - Quarto project directory
EOF
  exit 1
}

# Check is required dependencies are met
require find quarto tee

# Check if any directories are provided as arguments
if [ $# -eq 0 ]; then
  usage
fi

# Remove any existing output file
rm -f genpdf.out || {
  echo "File permissions problem"
  exit 1
}

# Initialize exit code
declare -i exitcode=0

# Iterate over each provided directory
for proj in "$@"; do
  echo "Processing $proj..."
  if [ -f "$proj/_quarto.yml" ]; then
    # exit on error if qmd file generation fails
    set -e
    find "$proj" -maxdepth 1 -name "*.ipynb" -type f -exec quarto convert {} \;
    set +e
    quarto render "$proj" --to pdf 2>&1 | tee -a genpdf.out
    exitcode=$((exitcode | $?))
  else
    echo "Error: $proj is not a Quarto project (missing _quarto.yml)"
    exitcode=$((exitcode | 1))
  fi
done

# Display error message and exit
if [ "$exitcode" -gt 0 ]; then
  echo "Errors generating pdf files. Check genpdf.out for errors."
fi
exit "$exitcode"

---
title: Chapter 2 Lab
jupyter:
  jupytext:
    formats: ipynb,py:percent
  kernelspec:
    display_name: islpenv
    language: python
    name: islpenv
---

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.210612Z', iopub.status.busy: '2024-10-22T07:29:51.210312Z', iopub.status.idle: '2024-10-22T07:29:51.248586Z', shell.execute_reply: '2024-10-22T07:29:51.245345Z', shell.execute_reply.started: '2024-10-22T07:29:51.210588Z'}
from notebookfuncs import *
```



```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.252285Z', iopub.status.busy: '2024-10-22T07:29:51.251925Z', iopub.status.idle: '2024-10-22T07:29:51.347643Z', shell.execute_reply: '2024-10-22T07:29:51.346547Z', shell.execute_reply.started: '2024-10-22T07:29:51.252243Z'}
#| lines_to_next_cell: 2
print("Fit a model with ", 11, " variables")
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.349583Z', iopub.status.busy: '2024-10-22T07:29:51.349282Z', iopub.status.idle: '2024-10-22T07:29:51.460505Z', shell.execute_reply: '2024-10-22T07:29:51.459319Z', shell.execute_reply.started: '2024-10-22T07:29:51.349561Z'}
print?
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.462071Z', iopub.status.busy: '2024-10-22T07:29:51.461812Z', iopub.status.idle: '2024-10-22T07:29:51.506229Z', shell.execute_reply: '2024-10-22T07:29:51.505166Z', shell.execute_reply.started: '2024-10-22T07:29:51.462051Z'}
3 + 5
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.508259Z', iopub.status.busy: '2024-10-22T07:29:51.507954Z', iopub.status.idle: '2024-10-22T07:29:51.593214Z', shell.execute_reply: '2024-10-22T07:29:51.592161Z', shell.execute_reply.started: '2024-10-22T07:29:51.508201Z'}
"hello, " + " " + "world!"
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.605528Z', iopub.status.busy: '2024-10-22T07:29:51.604203Z', iopub.status.idle: '2024-10-22T07:29:51.661038Z', shell.execute_reply: '2024-10-22T07:29:51.659990Z', shell.execute_reply.started: '2024-10-22T07:29:51.605481Z'}
x = [3, 4, 5]
x
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.663654Z', iopub.status.busy: '2024-10-22T07:29:51.663394Z', iopub.status.idle: '2024-10-22T07:29:51.748615Z', shell.execute_reply: '2024-10-22T07:29:51.747770Z', shell.execute_reply.started: '2024-10-22T07:29:51.663632Z'}
y = [4, 9, 7]
x + y
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.750754Z', iopub.status.busy: '2024-10-22T07:29:51.750474Z', iopub.status.idle: '2024-10-22T07:29:51.911458Z', shell.execute_reply: '2024-10-22T07:29:51.910329Z', shell.execute_reply.started: '2024-10-22T07:29:51.750733Z'}
import numpy as np
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.913699Z', iopub.status.busy: '2024-10-22T07:29:51.913300Z', iopub.status.idle: '2024-10-22T07:29:51.923078Z', shell.execute_reply: '2024-10-22T07:29:51.921498Z', shell.execute_reply.started: '2024-10-22T07:29:51.913676Z'}
x = np.array([3, 4, 5])
y = np.array([4, 9, 7])
x + y
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.926949Z', iopub.status.busy: '2024-10-22T07:29:51.926124Z', iopub.status.idle: '2024-10-22T07:29:51.993680Z', shell.execute_reply: '2024-10-22T07:29:51.992553Z', shell.execute_reply.started: '2024-10-22T07:29:51.926904Z'}
x = np.array([[1, 2], [3, 4]])
x
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:51.995984Z', iopub.status.busy: '2024-10-22T07:29:51.995627Z', iopub.status.idle: '2024-10-22T07:29:52.081736Z', shell.execute_reply: '2024-10-22T07:29:52.080668Z', shell.execute_reply.started: '2024-10-22T07:29:51.995961Z'}
#| lines_to_next_cell: 2
x.ndim
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.083753Z', iopub.status.busy: '2024-10-22T07:29:52.083427Z', iopub.status.idle: '2024-10-22T07:29:52.171430Z', shell.execute_reply: '2024-10-22T07:29:52.170206Z', shell.execute_reply.started: '2024-10-22T07:29:52.083718Z'}
x.dtype
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.173395Z', iopub.status.busy: '2024-10-22T07:29:52.173076Z', iopub.status.idle: '2024-10-22T07:29:52.248584Z', shell.execute_reply: '2024-10-22T07:29:52.247471Z', shell.execute_reply.started: '2024-10-22T07:29:52.173373Z'}
x = np.array([[1, 2], [3.0, 4]])
x.dtype
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.251369Z', iopub.status.busy: '2024-10-22T07:29:52.251041Z', iopub.status.idle: '2024-10-22T07:29:52.315854Z', shell.execute_reply: '2024-10-22T07:29:52.314736Z', shell.execute_reply.started: '2024-10-22T07:29:52.251346Z'}
np.array([[1, 2], [3, 4]], float).dtype
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.317824Z', iopub.status.busy: '2024-10-22T07:29:52.317502Z', iopub.status.idle: '2024-10-22T07:29:52.393086Z', shell.execute_reply: '2024-10-22T07:29:52.391685Z', shell.execute_reply.started: '2024-10-22T07:29:52.317802Z'}
x.shape
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.394920Z', iopub.status.busy: '2024-10-22T07:29:52.394627Z', iopub.status.idle: '2024-10-22T07:29:52.470945Z', shell.execute_reply: '2024-10-22T07:29:52.469800Z', shell.execute_reply.started: '2024-10-22T07:29:52.394899Z'}
x = np.array([1, 2, 3, 4])
x.sum()
```


```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.472822Z', iopub.status.busy: '2024-10-22T07:29:52.472551Z', iopub.status.idle: '2024-10-22T07:29:52.548164Z', shell.execute_reply: '2024-10-22T07:29:52.547262Z', shell.execute_reply.started: '2024-10-22T07:29:52.472802Z'}
x = np.array([1, 2, 3, 4])
np.sum(x)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.550474Z', iopub.status.busy: '2024-10-22T07:29:52.550051Z', iopub.status.idle: '2024-10-22T07:29:52.626147Z', shell.execute_reply: '2024-10-22T07:29:52.625079Z', shell.execute_reply.started: '2024-10-22T07:29:52.550445Z'}
x = np.array([1, 2, 3, 4, 5, 6])
print("Beginning x:\n ", x)
x_reshape = x.reshape(2, 3)
print("reshaped x:\n", x_reshape)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.627934Z', iopub.status.busy: '2024-10-22T07:29:52.627672Z', iopub.status.idle: '2024-10-22T07:29:52.704150Z', shell.execute_reply: '2024-10-22T07:29:52.703083Z', shell.execute_reply.started: '2024-10-22T07:29:52.627913Z'}
x_reshape[0, 0]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.706516Z', iopub.status.busy: '2024-10-22T07:29:52.706186Z', iopub.status.idle: '2024-10-22T07:29:52.804573Z', shell.execute_reply: '2024-10-22T07:29:52.803711Z', shell.execute_reply.started: '2024-10-22T07:29:52.706494Z'}
x_reshape[1, 2]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.826206Z', iopub.status.busy: '2024-10-22T07:29:52.825831Z', iopub.status.idle: '2024-10-22T07:29:52.881820Z', shell.execute_reply: '2024-10-22T07:29:52.880749Z', shell.execute_reply.started: '2024-10-22T07:29:52.826183Z'}
#| lines_to_next_cell: 2
print("x before we modify x_reshape:\n", x)
print("x_reshape before we modify x_reshape:\n", x_reshape)
x_reshape[0, 0] = 5
print("x_reshape after we modify its top left element:\n", x_reshape)
print("x after we modify top left element of x_reshape:\n", x)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.884258Z', iopub.status.busy: '2024-10-22T07:29:52.883939Z', iopub.status.idle: '2024-10-22T07:29:52.959704Z', shell.execute_reply: '2024-10-22T07:29:52.958642Z', shell.execute_reply.started: '2024-10-22T07:29:52.884225Z'}
my_tuple = (1, 2, 3)
# type error
# my_tuple[0] = 10
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:52.961572Z', iopub.status.busy: '2024-10-22T07:29:52.961288Z', iopub.status.idle: '2024-10-22T07:29:53.038005Z', shell.execute_reply: '2024-10-22T07:29:53.036617Z', shell.execute_reply.started: '2024-10-22T07:29:52.961550Z'}
x_reshape.shape, x_reshape.ndim, x_reshape.T
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.040201Z', iopub.status.busy: '2024-10-22T07:29:53.039934Z', iopub.status.idle: '2024-10-22T07:29:53.116008Z', shell.execute_reply: '2024-10-22T07:29:53.114909Z', shell.execute_reply.started: '2024-10-22T07:29:53.040178Z'}
np.sqrt(x)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.117669Z', iopub.status.busy: '2024-10-22T07:29:53.117409Z', iopub.status.idle: '2024-10-22T07:29:53.224276Z', shell.execute_reply: '2024-10-22T07:29:53.223216Z', shell.execute_reply.started: '2024-10-22T07:29:53.117648Z'}
x**2
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.226354Z', iopub.status.busy: '2024-10-22T07:29:53.226024Z', iopub.status.idle: '2024-10-22T07:29:53.304990Z', shell.execute_reply: '2024-10-22T07:29:53.303909Z', shell.execute_reply.started: '2024-10-22T07:29:53.226326Z'}
x**0.5
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.306892Z', iopub.status.busy: '2024-10-22T07:29:53.306628Z', iopub.status.idle: '2024-10-22T07:29:53.380585Z', shell.execute_reply: '2024-10-22T07:29:53.379504Z', shell.execute_reply.started: '2024-10-22T07:29:53.306864Z'}
np.random.normal?
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.382699Z', iopub.status.busy: '2024-10-22T07:29:53.382434Z', iopub.status.idle: '2024-10-22T07:29:53.460622Z', shell.execute_reply: '2024-10-22T07:29:53.459590Z', shell.execute_reply.started: '2024-10-22T07:29:53.382678Z'}
x = np.random.normal(size=50)
x
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.462576Z', iopub.status.busy: '2024-10-22T07:29:53.462280Z', iopub.status.idle: '2024-10-22T07:29:53.526658Z', shell.execute_reply: '2024-10-22T07:29:53.525620Z', shell.execute_reply.started: '2024-10-22T07:29:53.462555Z'}
y = x + np.random.normal(loc=50, scale=1, size=50)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.528550Z', iopub.status.busy: '2024-10-22T07:29:53.528280Z', iopub.status.idle: '2024-10-22T07:29:53.593635Z', shell.execute_reply: '2024-10-22T07:29:53.592708Z', shell.execute_reply.started: '2024-10-22T07:29:53.528529Z'}
np.corrcoef(x, y)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.595745Z', iopub.status.busy: '2024-10-22T07:29:53.595460Z', iopub.status.idle: '2024-10-22T07:29:53.658679Z', shell.execute_reply: '2024-10-22T07:29:53.657898Z', shell.execute_reply.started: '2024-10-22T07:29:53.595722Z'}
print(np.random.normal(scale=5, size=2))
print(np.random.normal(scale=5, size=2))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.660914Z', iopub.status.busy: '2024-10-22T07:29:53.660604Z', iopub.status.idle: '2024-10-22T07:29:53.748874Z', shell.execute_reply: '2024-10-22T07:29:53.747669Z', shell.execute_reply.started: '2024-10-22T07:29:53.660867Z'}
rng = np.random.default_rng(1303)
print(rng.normal(scale=5, size=2))
rng = np.random.default_rng(1303)
print(rng.normal(scale=5, size=2))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.750838Z', iopub.status.busy: '2024-10-22T07:29:53.750564Z', iopub.status.idle: '2024-10-22T07:29:53.816085Z', shell.execute_reply: '2024-10-22T07:29:53.815063Z', shell.execute_reply.started: '2024-10-22T07:29:53.750817Z'}
rng = np.random.default_rng(3)
y = rng.standard_normal(10)
np.mean(y), y.mean()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.818123Z', iopub.status.busy: '2024-10-22T07:29:53.817830Z', iopub.status.idle: '2024-10-22T07:29:53.882877Z', shell.execute_reply: '2024-10-22T07:29:53.881396Z', shell.execute_reply.started: '2024-10-22T07:29:53.818100Z'}
np.var(y), y.var(), np.mean((y - y.mean()) ** 2)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.884804Z', iopub.status.busy: '2024-10-22T07:29:53.884548Z', iopub.status.idle: '2024-10-22T07:29:53.949040Z', shell.execute_reply: '2024-10-22T07:29:53.947695Z', shell.execute_reply.started: '2024-10-22T07:29:53.884782Z'}
np.sqrt(np.var(y)), np.std(y)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:53.950739Z', iopub.status.busy: '2024-10-22T07:29:53.950454Z', iopub.status.idle: '2024-10-22T07:29:54.016962Z', shell.execute_reply: '2024-10-22T07:29:54.015704Z', shell.execute_reply.started: '2024-10-22T07:29:53.950719Z'}
np.var?
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.018687Z', iopub.status.busy: '2024-10-22T07:29:54.018401Z', iopub.status.idle: '2024-10-22T07:29:54.083050Z', shell.execute_reply: '2024-10-22T07:29:54.081756Z', shell.execute_reply.started: '2024-10-22T07:29:54.018666Z'}
X = rng.standard_normal((10, 3))
X
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.084949Z', iopub.status.busy: '2024-10-22T07:29:54.084612Z', iopub.status.idle: '2024-10-22T07:29:54.149107Z', shell.execute_reply: '2024-10-22T07:29:54.147966Z', shell.execute_reply.started: '2024-10-22T07:29:54.084906Z'}
X.mean(axis=0)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.151163Z', iopub.status.busy: '2024-10-22T07:29:54.150853Z', iopub.status.idle: '2024-10-22T07:29:54.215644Z', shell.execute_reply: '2024-10-22T07:29:54.214538Z', shell.execute_reply.started: '2024-10-22T07:29:54.151142Z'}
X.mean(axis=0)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.217692Z', iopub.status.busy: '2024-10-22T07:29:54.217398Z', iopub.status.idle: '2024-10-22T07:29:54.283107Z', shell.execute_reply: '2024-10-22T07:29:54.282051Z', shell.execute_reply.started: '2024-10-22T07:29:54.217666Z'}
X.mean(0)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.284974Z', iopub.status.busy: '2024-10-22T07:29:54.284662Z', iopub.status.idle: '2024-10-22T07:29:54.348716Z', shell.execute_reply: '2024-10-22T07:29:54.347883Z', shell.execute_reply.started: '2024-10-22T07:29:54.284948Z'}
X.mean(1)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.350982Z', iopub.status.busy: '2024-10-22T07:29:54.350636Z', iopub.status.idle: '2024-10-22T07:29:54.416400Z', shell.execute_reply: '2024-10-22T07:29:54.415246Z', shell.execute_reply.started: '2024-10-22T07:29:54.350959Z'}
X.mean()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.418318Z', iopub.status.busy: '2024-10-22T07:29:54.418038Z', iopub.status.idle: '2024-10-22T07:29:54.481678Z', shell.execute_reply: '2024-10-22T07:29:54.480391Z', shell.execute_reply.started: '2024-10-22T07:29:54.418296Z'}
ax.plot?
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:54.483693Z', iopub.status.busy: '2024-10-22T07:29:54.483351Z', iopub.status.idle: '2024-10-22T07:29:55.027837Z', shell.execute_reply: '2024-10-22T07:29:55.026653Z', shell.execute_reply.started: '2024-10-22T07:29:54.483640Z'}
from matplotlib.pyplot import subplots
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:55.029630Z', iopub.status.busy: '2024-10-22T07:29:55.029244Z', iopub.status.idle: '2024-10-22T07:29:55.216496Z', shell.execute_reply: '2024-10-22T07:29:55.215408Z', shell.execute_reply.started: '2024-10-22T07:29:55.029609Z'}
fig, ax = subplots(figsize=(8, 8))
x = rng.standard_normal(100)
y = rng.standard_normal(100)
ax.plot(x, y);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:55.218778Z', iopub.status.busy: '2024-10-22T07:29:55.218513Z', iopub.status.idle: '2024-10-22T07:29:55.358420Z', shell.execute_reply: '2024-10-22T07:29:55.357409Z', shell.execute_reply.started: '2024-10-22T07:29:55.218758Z'}
fig, ax = subplots(figsize=(8, 8))
ax.plot(x, y, "o");
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:55.360347Z', iopub.status.busy: '2024-10-22T07:29:55.359999Z', iopub.status.idle: '2024-10-22T07:29:55.512988Z', shell.execute_reply: '2024-10-22T07:29:55.512017Z', shell.execute_reply.started: '2024-10-22T07:29:55.360325Z'}
fig, ax = subplots(figsize=(8, 8))
ax.scatter(x, y, marker="o");
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:55.515088Z', iopub.status.busy: '2024-10-22T07:29:55.514821Z', iopub.status.idle: '2024-10-22T07:29:55.701302Z', shell.execute_reply: '2024-10-22T07:29:55.700137Z', shell.execute_reply.started: '2024-10-22T07:29:55.515053Z'}
fig, ax = subplots(figsize=(8, 8))

ax.scatter(x, y, marker="o")
ax.set_xlabel("this is the x-axis")
ax.set_ylabel("this is the y-axis")
ax.set_title("Plot of X vs Y")
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:55.703362Z', iopub.status.busy: '2024-10-22T07:29:55.703065Z', iopub.status.idle: '2024-10-22T07:29:55.818793Z', shell.execute_reply: '2024-10-22T07:29:55.817727Z', shell.execute_reply.started: '2024-10-22T07:29:55.703334Z'}
fig.set_size_inches(12, 3)
fig
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:55.820728Z', iopub.status.busy: '2024-10-22T07:29:55.820438Z', iopub.status.idle: '2024-10-22T07:29:56.395803Z', shell.execute_reply: '2024-10-22T07:29:56.394798Z', shell.execute_reply.started: '2024-10-22T07:29:55.820708Z'}
fig, axes = subplots(nrows=2, ncols=3, figsize=(15, 5))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:56.397781Z', iopub.status.busy: '2024-10-22T07:29:56.397511Z', iopub.status.idle: '2024-10-22T07:29:56.753865Z', shell.execute_reply: '2024-10-22T07:29:56.752926Z', shell.execute_reply.started: '2024-10-22T07:29:56.397760Z'}
axes[0, 1].plot(x, y, "o")
axes[1, 2].scatter(x, y, marker="+")
fig
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:56.756058Z', iopub.status.busy: '2024-10-22T07:29:56.755797Z', iopub.status.idle: '2024-10-22T07:29:57.901551Z', shell.execute_reply: '2024-10-22T07:29:57.900400Z', shell.execute_reply.started: '2024-10-22T07:29:56.756037Z'}
fig.savefig("Figure.png", dpi=400)
fig.savefig("Figure.pdf", dpi=200)
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:57.903513Z', iopub.status.busy: '2024-10-22T07:29:57.903125Z', iopub.status.idle: '2024-10-22T07:29:58.390802Z', shell.execute_reply: '2024-10-22T07:29:58.389718Z', shell.execute_reply.started: '2024-10-22T07:29:57.903491Z'}
axes[0, 1].set_xlim([-1, 1])
fig.savefig("Figure_updated.jpg")
fig
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:58.392725Z', iopub.status.busy: '2024-10-22T07:29:58.392438Z', iopub.status.idle: '2024-10-22T07:29:58.563571Z', shell.execute_reply: '2024-10-22T07:29:58.562588Z', shell.execute_reply.started: '2024-10-22T07:29:58.392704Z'}
fig, ax = subplots(figsize=(8, 8))
x = np.linspace(-np.pi, np.pi, 50)
print(x)
y = x
f = np.multiply.outer(np.cos(y), 1 / (1 + x**2))
ax.contour(x, y, f);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:58.565650Z', iopub.status.busy: '2024-10-22T07:29:58.565361Z', iopub.status.idle: '2024-10-22T07:29:58.772598Z', shell.execute_reply: '2024-10-22T07:29:58.771360Z', shell.execute_reply.started: '2024-10-22T07:29:58.565629Z'}
fig, ax = subplots(figsize=(8, 8))
ax.contour(x, y, f, levels=45);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:58.774416Z', iopub.status.busy: '2024-10-22T07:29:58.774092Z', iopub.status.idle: '2024-10-22T07:29:59.099214Z', shell.execute_reply: '2024-10-22T07:29:59.098170Z', shell.execute_reply.started: '2024-10-22T07:29:58.774390Z'}
fig, ax = subplots(figsize=(8, 8))
ax.imshow(f);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.101408Z', iopub.status.busy: '2024-10-22T07:29:59.101048Z', iopub.status.idle: '2024-10-22T07:29:59.110109Z', shell.execute_reply: '2024-10-22T07:29:59.108870Z', shell.execute_reply.started: '2024-10-22T07:29:59.101386Z'}
seq1 = np.linspace(0, 10, 11)
seq1
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.112715Z', iopub.status.busy: '2024-10-22T07:29:59.112347Z', iopub.status.idle: '2024-10-22T07:29:59.215624Z', shell.execute_reply: '2024-10-22T07:29:59.214692Z', shell.execute_reply.started: '2024-10-22T07:29:59.112681Z'}
seq2 = np.arange(0, 10)
seq2
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.217789Z', iopub.status.busy: '2024-10-22T07:29:59.217347Z', iopub.status.idle: '2024-10-22T07:29:59.304807Z', shell.execute_reply: '2024-10-22T07:29:59.303798Z', shell.execute_reply.started: '2024-10-22T07:29:59.217760Z'}
"Hello, world!"[3:6]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.307308Z', iopub.status.busy: '2024-10-22T07:29:59.306904Z', iopub.status.idle: '2024-10-22T07:29:59.416351Z', shell.execute_reply: '2024-10-22T07:29:59.415062Z', shell.execute_reply.started: '2024-10-22T07:29:59.307274Z'}
"Hello, world!"[slice(3, 6)]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.418513Z', iopub.status.busy: '2024-10-22T07:29:59.418199Z', iopub.status.idle: '2024-10-22T07:29:59.506715Z', shell.execute_reply: '2024-10-22T07:29:59.505167Z', shell.execute_reply.started: '2024-10-22T07:29:59.418492Z'}
A = np.array(np.arange(16)).reshape((4, 4))
print(A)
A[1, 2]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.509631Z', iopub.status.busy: '2024-10-22T07:29:59.509196Z', iopub.status.idle: '2024-10-22T07:29:59.633567Z', shell.execute_reply: '2024-10-22T07:29:59.632382Z', shell.execute_reply.started: '2024-10-22T07:29:59.509583Z'}
A[[1, 3]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.635381Z', iopub.status.busy: '2024-10-22T07:29:59.635055Z', iopub.status.idle: '2024-10-22T07:29:59.705291Z', shell.execute_reply: '2024-10-22T07:29:59.704235Z', shell.execute_reply.started: '2024-10-22T07:29:59.635357Z'}
A[:, [0, 2]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.707160Z', iopub.status.busy: '2024-10-22T07:29:59.706892Z', iopub.status.idle: '2024-10-22T07:29:59.783350Z', shell.execute_reply: '2024-10-22T07:29:59.782151Z', shell.execute_reply.started: '2024-10-22T07:29:59.707138Z'}
A[[1, 3], [0, 2]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.785735Z', iopub.status.busy: '2024-10-22T07:29:59.785429Z', iopub.status.idle: '2024-10-22T07:29:59.861313Z', shell.execute_reply: '2024-10-22T07:29:59.859729Z', shell.execute_reply.started: '2024-10-22T07:29:59.785714Z'}
np.array([A[1, 0], A[3, 2]])
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.893615Z', iopub.status.busy: '2024-10-22T07:29:59.893196Z', iopub.status.idle: '2024-10-22T07:29:59.938287Z', shell.execute_reply: '2024-10-22T07:29:59.937216Z', shell.execute_reply.started: '2024-10-22T07:29:59.893589Z'}
A[[1, 3]][:, [0, 2]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:29:59.940446Z', iopub.status.busy: '2024-10-22T07:29:59.940135Z', iopub.status.idle: '2024-10-22T07:30:00.016588Z', shell.execute_reply: '2024-10-22T07:30:00.015505Z', shell.execute_reply.started: '2024-10-22T07:29:59.940425Z'}
idx = np.ix_([1, 3], [0, 2, 3])
A[idx]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.018473Z', iopub.status.busy: '2024-10-22T07:30:00.018173Z', iopub.status.idle: '2024-10-22T07:30:00.128225Z', shell.execute_reply: '2024-10-22T07:30:00.127191Z', shell.execute_reply.started: '2024-10-22T07:30:00.018450Z'}
A[1:4:2, 0:3:2]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.130593Z', iopub.status.busy: '2024-10-22T07:30:00.130164Z', iopub.status.idle: '2024-10-22T07:30:00.205052Z', shell.execute_reply: '2024-10-22T07:30:00.203984Z', shell.execute_reply.started: '2024-10-22T07:30:00.130538Z'}
keep_rows = np.zeros(A.shape[0], bool)
keep_rows
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.206883Z', iopub.status.busy: '2024-10-22T07:30:00.206596Z', iopub.status.idle: '2024-10-22T07:30:00.294224Z', shell.execute_reply: '2024-10-22T07:30:00.292709Z', shell.execute_reply.started: '2024-10-22T07:30:00.206855Z'}
keep_rows[[1, 3]] = True
keep_rows
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.296233Z', iopub.status.busy: '2024-10-22T07:30:00.295952Z', iopub.status.idle: '2024-10-22T07:30:00.372778Z', shell.execute_reply: '2024-10-22T07:30:00.371403Z', shell.execute_reply.started: '2024-10-22T07:30:00.296211Z'}
np.all(keep_rows == np.array([0, 1, 0, 1]))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.374781Z', iopub.status.busy: '2024-10-22T07:30:00.374483Z', iopub.status.idle: '2024-10-22T07:30:00.450359Z', shell.execute_reply: '2024-10-22T07:30:00.449172Z', shell.execute_reply.started: '2024-10-22T07:30:00.374759Z'}
A[np.array([0, 1, 0, 1])]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.452301Z', iopub.status.busy: '2024-10-22T07:30:00.451966Z', iopub.status.idle: '2024-10-22T07:30:00.560632Z', shell.execute_reply: '2024-10-22T07:30:00.559557Z', shell.execute_reply.started: '2024-10-22T07:30:00.452226Z'}
A[keep_rows]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.562507Z', iopub.status.busy: '2024-10-22T07:30:00.562190Z', iopub.status.idle: '2024-10-22T07:30:00.649786Z', shell.execute_reply: '2024-10-22T07:30:00.648708Z', shell.execute_reply.started: '2024-10-22T07:30:00.562483Z'}
keep_cols = np.zeros(A.shape[1], bool)
keep_cols
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.651667Z', iopub.status.busy: '2024-10-22T07:30:00.651404Z', iopub.status.idle: '2024-10-22T07:30:00.738297Z', shell.execute_reply: '2024-10-22T07:30:00.737190Z', shell.execute_reply.started: '2024-10-22T07:30:00.651645Z'}
keep_cols[[0, 2, 3]] = True
keep_cols
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.740190Z', iopub.status.busy: '2024-10-22T07:30:00.739923Z', iopub.status.idle: '2024-10-22T07:30:00.851321Z', shell.execute_reply: '2024-10-22T07:30:00.850174Z', shell.execute_reply.started: '2024-10-22T07:30:00.740168Z'}
idx_bool = np.ix_(keep_rows, keep_cols)
idx_bool
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.853199Z', iopub.status.busy: '2024-10-22T07:30:00.852949Z', iopub.status.idle: '2024-10-22T07:30:00.964359Z', shell.execute_reply: '2024-10-22T07:30:00.963405Z', shell.execute_reply.started: '2024-10-22T07:30:00.853178Z'}
A[idx_bool]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:00.966137Z', iopub.status.busy: '2024-10-22T07:30:00.965865Z', iopub.status.idle: '2024-10-22T07:30:01.061643Z', shell.execute_reply: '2024-10-22T07:30:01.060608Z', shell.execute_reply.started: '2024-10-22T07:30:00.966116Z'}
idx_mixed = np.ix_([1, 3], keep_cols)
idx_mixed
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.063725Z', iopub.status.busy: '2024-10-22T07:30:01.063456Z', iopub.status.idle: '2024-10-22T07:30:01.150142Z', shell.execute_reply: '2024-10-22T07:30:01.149056Z', shell.execute_reply.started: '2024-10-22T07:30:01.063704Z'}
A[idx_mixed]
```

## Reading in a data set

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.152030Z', iopub.status.busy: '2024-10-22T07:30:01.151777Z', iopub.status.idle: '2024-10-22T07:30:01.590517Z', shell.execute_reply: '2024-10-22T07:30:01.589048Z', shell.execute_reply.started: '2024-10-22T07:30:01.152009Z'}
import pandas as pd

Auto = pd.read_csv("Auto.csv")
Auto
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.592213Z', iopub.status.busy: '2024-10-22T07:30:01.591950Z', iopub.status.idle: '2024-10-22T07:30:01.619485Z', shell.execute_reply: '2024-10-22T07:30:01.618166Z', shell.execute_reply.started: '2024-10-22T07:30:01.592192Z'}
Auto = pd.read_csv("Auto.data", sep="\s+")
Auto
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.621741Z', iopub.status.busy: '2024-10-22T07:30:01.621377Z', iopub.status.idle: '2024-10-22T07:30:01.729392Z', shell.execute_reply: '2024-10-22T07:30:01.728288Z', shell.execute_reply.started: '2024-10-22T07:30:01.621719Z'}
Auto["horsepower"]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.731639Z', iopub.status.busy: '2024-10-22T07:30:01.731318Z', iopub.status.idle: '2024-10-22T07:30:01.888553Z', shell.execute_reply: '2024-10-22T07:30:01.887443Z', shell.execute_reply.started: '2024-10-22T07:30:01.731618Z'}
np.unique(Auto["horsepower"])
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.890505Z', iopub.status.busy: '2024-10-22T07:30:01.890159Z', iopub.status.idle: '2024-10-22T07:30:01.997822Z', shell.execute_reply: '2024-10-22T07:30:01.996748Z', shell.execute_reply.started: '2024-10-22T07:30:01.890482Z'}
Auto = pd.read_csv("Auto.data", na_values=["?"], sep="\s+")
Auto["horsepower"].sum()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:01.999683Z', iopub.status.busy: '2024-10-22T07:30:01.999378Z', iopub.status.idle: '2024-10-22T07:30:02.094281Z', shell.execute_reply: '2024-10-22T07:30:02.093286Z', shell.execute_reply.started: '2024-10-22T07:30:01.999642Z'}
Auto.shape
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.097138Z', iopub.status.busy: '2024-10-22T07:30:02.096768Z', iopub.status.idle: '2024-10-22T07:30:02.204961Z', shell.execute_reply: '2024-10-22T07:30:02.203876Z', shell.execute_reply.started: '2024-10-22T07:30:02.097106Z'}
Auto_new = Auto.dropna()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.206839Z', iopub.status.busy: '2024-10-22T07:30:02.206567Z', iopub.status.idle: '2024-10-22T07:30:02.282369Z', shell.execute_reply: '2024-10-22T07:30:02.281204Z', shell.execute_reply.started: '2024-10-22T07:30:02.206818Z'}
Auto_new.shape
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.284402Z', iopub.status.busy: '2024-10-22T07:30:02.284090Z', iopub.status.idle: '2024-10-22T07:30:02.383572Z', shell.execute_reply: '2024-10-22T07:30:02.382492Z', shell.execute_reply.started: '2024-10-22T07:30:02.284381Z'}
Auto = Auto_new
Auto.columns
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.385362Z', iopub.status.busy: '2024-10-22T07:30:02.385073Z', iopub.status.idle: '2024-10-22T07:30:02.490004Z', shell.execute_reply: '2024-10-22T07:30:02.488893Z', shell.execute_reply.started: '2024-10-22T07:30:02.385340Z'}
Auto[:3]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.491913Z', iopub.status.busy: '2024-10-22T07:30:02.491644Z', iopub.status.idle: '2024-10-22T07:30:02.588382Z', shell.execute_reply: '2024-10-22T07:30:02.587298Z', shell.execute_reply.started: '2024-10-22T07:30:02.491891Z'}
idx_80 = Auto["year"] > 80
Auto[idx_80]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.590822Z', iopub.status.busy: '2024-10-22T07:30:02.590427Z', iopub.status.idle: '2024-10-22T07:30:02.667098Z', shell.execute_reply: '2024-10-22T07:30:02.665960Z', shell.execute_reply.started: '2024-10-22T07:30:02.590799Z'}
Auto[["mpg", "horsepower"]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.668931Z', iopub.status.busy: '2024-10-22T07:30:02.668666Z', iopub.status.idle: '2024-10-22T07:30:02.738825Z', shell.execute_reply: '2024-10-22T07:30:02.737741Z', shell.execute_reply.started: '2024-10-22T07:30:02.668910Z'}
Auto.index
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.740995Z', iopub.status.busy: '2024-10-22T07:30:02.740596Z', iopub.status.idle: '2024-10-22T07:30:02.849597Z', shell.execute_reply: '2024-10-22T07:30:02.848550Z', shell.execute_reply.started: '2024-10-22T07:30:02.740941Z'}
Auto_re = Auto.set_index("name")
Auto_re
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.851561Z', iopub.status.busy: '2024-10-22T07:30:02.851260Z', iopub.status.idle: '2024-10-22T07:30:02.938548Z', shell.execute_reply: '2024-10-22T07:30:02.937476Z', shell.execute_reply.started: '2024-10-22T07:30:02.851540Z'}
Auto_re.columns
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:02.940447Z', iopub.status.busy: '2024-10-22T07:30:02.940143Z', iopub.status.idle: '2024-10-22T07:30:03.027659Z', shell.execute_reply: '2024-10-22T07:30:03.026677Z', shell.execute_reply.started: '2024-10-22T07:30:02.940418Z'}
Auto_re.shape
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.029908Z', iopub.status.busy: '2024-10-22T07:30:03.029527Z', iopub.status.idle: '2024-10-22T07:30:03.123537Z', shell.execute_reply: '2024-10-22T07:30:03.122484Z', shell.execute_reply.started: '2024-10-22T07:30:03.029878Z'}
rows = ["amc rebel sst", "ford torino"]
Auto_re.loc[rows]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.125450Z', iopub.status.busy: '2024-10-22T07:30:03.125171Z', iopub.status.idle: '2024-10-22T07:30:03.211693Z', shell.execute_reply: '2024-10-22T07:30:03.210585Z', shell.execute_reply.started: '2024-10-22T07:30:03.125430Z'}
Auto_re.iloc[[3, 4]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.213527Z', iopub.status.busy: '2024-10-22T07:30:03.213217Z', iopub.status.idle: '2024-10-22T07:30:03.301073Z', shell.execute_reply: '2024-10-22T07:30:03.300046Z', shell.execute_reply.started: '2024-10-22T07:30:03.213506Z'}
Auto_re.iloc[:, [0, 2, 3]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.302947Z', iopub.status.busy: '2024-10-22T07:30:03.302684Z', iopub.status.idle: '2024-10-22T07:30:03.387823Z', shell.execute_reply: '2024-10-22T07:30:03.386656Z', shell.execute_reply.started: '2024-10-22T07:30:03.302926Z'}
Auto_re.iloc[[3, 4], [0, 2, 3]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.389405Z', iopub.status.busy: '2024-10-22T07:30:03.389122Z', iopub.status.idle: '2024-10-22T07:30:03.476308Z', shell.execute_reply: '2024-10-22T07:30:03.475268Z', shell.execute_reply.started: '2024-10-22T07:30:03.389384Z'}
Auto_re.loc["ford galaxie 500", ["mpg", "origin"]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.478108Z', iopub.status.busy: '2024-10-22T07:30:03.477849Z', iopub.status.idle: '2024-10-22T07:30:03.587843Z', shell.execute_reply: '2024-10-22T07:30:03.586785Z', shell.execute_reply.started: '2024-10-22T07:30:03.478088Z'}
idx_80 = Auto_re["year"] > 80
Auto_re.loc[idx_80]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.589639Z', iopub.status.busy: '2024-10-22T07:30:03.589358Z', iopub.status.idle: '2024-10-22T07:30:03.682269Z', shell.execute_reply: '2024-10-22T07:30:03.681283Z', shell.execute_reply.started: '2024-10-22T07:30:03.589618Z'}
Auto_re.loc[idx_80, ["weight", "origin"]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.684342Z', iopub.status.busy: '2024-10-22T07:30:03.683973Z', iopub.status.idle: '2024-10-22T07:30:03.804411Z', shell.execute_reply: '2024-10-22T07:30:03.803223Z', shell.execute_reply.started: '2024-10-22T07:30:03.684294Z'}
Auto_re.loc[lambda df: df["year"] > 80, ["weight", "origin"]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.806016Z', iopub.status.busy: '2024-10-22T07:30:03.805684Z', iopub.status.idle: '2024-10-22T07:30:03.913032Z', shell.execute_reply: '2024-10-22T07:30:03.911949Z', shell.execute_reply.started: '2024-10-22T07:30:03.805969Z'}
Auto_re.loc[lambda df: (df["year"] > 80) & (df["mpg"] > 30), ["weight", "origin"]]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:03.915220Z', iopub.status.busy: '2024-10-22T07:30:03.914910Z', iopub.status.idle: '2024-10-22T07:30:04.026260Z', shell.execute_reply: '2024-10-22T07:30:04.025197Z', shell.execute_reply.started: '2024-10-22T07:30:03.915199Z'}
Auto_re.loc[
    lambda df: (df["displacement"] < 300)
    & (df.index.str.contains("ford") | df.index.str.contains("datsun")),
    ["weight", "origin"],
]
```

## for loops

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.028104Z', iopub.status.busy: '2024-10-22T07:30:04.027842Z', iopub.status.idle: '2024-10-22T07:30:04.104507Z', shell.execute_reply: '2024-10-22T07:30:04.103357Z', shell.execute_reply.started: '2024-10-22T07:30:04.028084Z'}
total = 0
for value in [3, 2, 9]:
    total += value
print("total is: {0}".format(total))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.106842Z', iopub.status.busy: '2024-10-22T07:30:04.106428Z', iopub.status.idle: '2024-10-22T07:30:04.193687Z', shell.execute_reply: '2024-10-22T07:30:04.192141Z', shell.execute_reply.started: '2024-10-22T07:30:04.106813Z'}
total = 0
for value in [3, 2, 9]:
    for weight in [3, 2, 1]:
        total += weight * value
print("total is: {0}".format(total))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.195538Z', iopub.status.busy: '2024-10-22T07:30:04.195260Z', iopub.status.idle: '2024-10-22T07:30:04.307723Z', shell.execute_reply: '2024-10-22T07:30:04.306816Z', shell.execute_reply.started: '2024-10-22T07:30:04.195518Z'}
total = 0
for value, weight in zip([3, 2, 9], [0.2, 0.3, 0.5]):
    total += weight * value
print("weighted average is: {0}".format(total))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.309786Z', iopub.status.busy: '2024-10-22T07:30:04.309474Z', iopub.status.idle: '2024-10-22T07:30:04.423606Z', shell.execute_reply: '2024-10-22T07:30:04.422666Z', shell.execute_reply.started: '2024-10-22T07:30:04.309764Z'}
rng = np.random.default_rng(1)
A = rng.standard_normal((127, 5))
A
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.425435Z', iopub.status.busy: '2024-10-22T07:30:04.425115Z', iopub.status.idle: '2024-10-22T07:30:04.505114Z', shell.execute_reply: '2024-10-22T07:30:04.504066Z', shell.execute_reply.started: '2024-10-22T07:30:04.425411Z'}
#| lines_to_next_cell: 2
A.shape
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.507351Z', iopub.status.busy: '2024-10-22T07:30:04.507048Z', iopub.status.idle: '2024-10-22T07:30:04.587995Z', shell.execute_reply: '2024-10-22T07:30:04.586948Z', shell.execute_reply.started: '2024-10-22T07:30:04.507326Z'}
M = rng.choice([0, np.nan], p=[0.8, 0.2], size=A.shape)
M
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.589803Z', iopub.status.busy: '2024-10-22T07:30:04.589542Z', iopub.status.idle: '2024-10-22T07:30:04.712077Z', shell.execute_reply: '2024-10-22T07:30:04.711078Z', shell.execute_reply.started: '2024-10-22T07:30:04.589783Z'}
A += M
A
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.713823Z', iopub.status.busy: '2024-10-22T07:30:04.713571Z', iopub.status.idle: '2024-10-22T07:30:04.878830Z', shell.execute_reply: '2024-10-22T07:30:04.877896Z', shell.execute_reply.started: '2024-10-22T07:30:04.713802Z'}
D = pd.DataFrame(A, columns=["food", "bar", "pickle", "snack", "popcorn"])
D
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.880981Z', iopub.status.busy: '2024-10-22T07:30:04.880719Z', iopub.status.idle: '2024-10-22T07:30:04.954822Z', shell.execute_reply: '2024-10-22T07:30:04.953726Z', shell.execute_reply.started: '2024-10-22T07:30:04.880959Z'}
D[:3]
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:04.956674Z', iopub.status.busy: '2024-10-22T07:30:04.956411Z', iopub.status.idle: '2024-10-22T07:30:05.027749Z', shell.execute_reply: '2024-10-22T07:30:05.026643Z', shell.execute_reply.started: '2024-10-22T07:30:04.956653Z'}
for col in D.columns:
    template = "Column {0} has {1: .2%} missing values"
    print(template.format(col, np.isnan(D[col]).mean()))
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:05.029927Z', iopub.status.busy: '2024-10-22T07:30:05.029580Z', iopub.status.idle: '2024-10-22T07:30:05.259601Z', shell.execute_reply: '2024-10-22T07:30:05.258455Z', shell.execute_reply.started: '2024-10-22T07:30:05.029899Z'}
fig, ax = subplots(figsize=(8, 8))
ax.plot(Auto["horsepower"].values, Auto["mpg"].values, "o");
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:05.262111Z', iopub.status.busy: '2024-10-22T07:30:05.261763Z', iopub.status.idle: '2024-10-22T07:30:05.477845Z', shell.execute_reply: '2024-10-22T07:30:05.476209Z', shell.execute_reply.started: '2024-10-22T07:30:05.262088Z'}
ax = Auto.plot.scatter("horsepower", "mpg")
ax.set_title("Horsepower vs MPG")
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:05.479876Z', iopub.status.busy: '2024-10-22T07:30:05.479590Z', iopub.status.idle: '2024-10-22T07:30:05.561673Z', shell.execute_reply: '2024-10-22T07:30:05.560500Z', shell.execute_reply.started: '2024-10-22T07:30:05.479854Z'}
fig = ax.figure
fig.savefig("hp_mpg.png")
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:05.563625Z', iopub.status.busy: '2024-10-22T07:30:05.563327Z', iopub.status.idle: '2024-10-22T07:30:05.923078Z', shell.execute_reply: '2024-10-22T07:30:05.921998Z', shell.execute_reply.started: '2024-10-22T07:30:05.563604Z'}
fig, axes = subplots(ncols=3, figsize=(15, 5))
Auto.plot.scatter("horsepower", "mpg", ax=axes[1])
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:05.924969Z', iopub.status.busy: '2024-10-22T07:30:05.924658Z', iopub.status.idle: '2024-10-22T07:30:05.935887Z', shell.execute_reply: '2024-10-22T07:30:05.934426Z', shell.execute_reply.started: '2024-10-22T07:30:05.924947Z'}
Auto.cylinders = pd.Series(Auto.cylinders, dtype="category")
Auto.cylinders.dtype
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:05.938674Z', iopub.status.busy: '2024-10-22T07:30:05.938287Z', iopub.status.idle: '2024-10-22T07:30:06.358545Z', shell.execute_reply: '2024-10-22T07:30:06.357488Z', shell.execute_reply.started: '2024-10-22T07:30:05.938649Z'}
fig, ax = subplots(figsize=(8, 8))
Auto.boxplot("mpg", by="cylinders", ax=ax);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:06.360352Z', iopub.status.busy: '2024-10-22T07:30:06.360046Z', iopub.status.idle: '2024-10-22T07:30:06.576749Z', shell.execute_reply: '2024-10-22T07:30:06.575166Z', shell.execute_reply.started: '2024-10-22T07:30:06.360321Z'}
fig, ax = subplots(figsize=(8, 8));
Auto.hist("mpg", ax=ax);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:06.578697Z', iopub.status.busy: '2024-10-22T07:30:06.578442Z', iopub.status.idle: '2024-10-22T07:30:06.779626Z', shell.execute_reply: '2024-10-22T07:30:06.778698Z', shell.execute_reply.started: '2024-10-22T07:30:06.578677Z'}
fig, ax = subplots(figsize=(8, 8))
Auto.hist("mpg", color="red", bins=12, ax=ax);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:06.781691Z', iopub.status.busy: '2024-10-22T07:30:06.781424Z', iopub.status.idle: '2024-10-22T07:30:06.797922Z', shell.execute_reply: '2024-10-22T07:30:06.796542Z', shell.execute_reply.started: '2024-10-22T07:30:06.781670Z'}
Auto.hist?
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:06.800360Z', iopub.status.busy: '2024-10-22T07:30:06.800013Z', iopub.status.idle: '2024-10-22T07:30:08.853429Z', shell.execute_reply: '2024-10-22T07:30:08.852502Z', shell.execute_reply.started: '2024-10-22T07:30:06.800314Z'}
pd.plotting.scatter_matrix(Auto);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:08.855149Z', iopub.status.busy: '2024-10-22T07:30:08.854886Z', iopub.status.idle: '2024-10-22T07:30:09.354614Z', shell.execute_reply: '2024-10-22T07:30:09.353476Z', shell.execute_reply.started: '2024-10-22T07:30:08.855128Z'}
pd.plotting.scatter_matrix(Auto[["mpg", "displacement", "weight"]]);
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:09.356115Z', iopub.status.busy: '2024-10-22T07:30:09.355861Z', iopub.status.idle: '2024-10-22T07:30:09.375536Z', shell.execute_reply: '2024-10-22T07:30:09.374205Z', shell.execute_reply.started: '2024-10-22T07:30:09.356093Z'}
Auto[["mpg", "weight"]].describe()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:09.377493Z', iopub.status.busy: '2024-10-22T07:30:09.377130Z', iopub.status.idle: '2024-10-22T07:30:09.478354Z', shell.execute_reply: '2024-10-22T07:30:09.477283Z', shell.execute_reply.started: '2024-10-22T07:30:09.377471Z'}
Auto[["cylinders"]].describe()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:09.480390Z', iopub.status.busy: '2024-10-22T07:30:09.480074Z', iopub.status.idle: '2024-10-22T07:30:09.566542Z', shell.execute_reply: '2024-10-22T07:30:09.565452Z', shell.execute_reply.started: '2024-10-22T07:30:09.480369Z'}
Auto[["mpg"]].describe()
```

```{python}
#| execution: {iopub.execute_input: '2024-10-22T07:30:09.568580Z', iopub.status.busy: '2024-10-22T07:30:09.568265Z', iopub.status.idle: '2024-10-22T07:30:09.631750Z', shell.execute_reply: '2024-10-22T07:30:09.630666Z', shell.execute_reply.started: '2024-10-22T07:30:09.568560Z'}
allDone()
```
